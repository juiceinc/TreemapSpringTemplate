<?xml version="1.0" encoding="utf-8"?>

<!--

    ADOBE SYSTEMS INCORPORATED
    Copyright 2008 Adobe Systems Incorporated
    All Rights Reserved.

    NOTICE: Adobe permits you to use, modify, and distribute this file
    in accordance with the terms of the license agreement accompanying it.

-->

<!--- The default skin class for a Spark SkinnableContainer container.  

     @see spark.components.SkinnableContainer
        
      @langversion 3.0
      @playerversion Flash 10
      @playerversion AIR 1.5
      @productversion Flex 4
-->
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark" 
    xmlns:fb="http://ns.adobe.com/flashbuilder/2009" alpha.disabled="0.5" xmlns:controls="org.juicekit.controls.*">
    
    <fx:Metadata>[HostComponent("org.juicekit.app.treemap.view.TreemapContainer")]</fx:Metadata>

    
    <s:states>
        <s:State name="normal" />
        <s:State name="disabled" />
        <fx:Script>
        <![CDATA[
            import org.juicekit.util.Strings;
        ]]>
        </fx:Script>
    </s:states>
    
    <!--- Defines the appearance of the SkinnableContainer class's background. -->
    <s:Rect id="background" left="0" right="0" top="0" bottom="0">
        <s:fill>
            <!--- @private -->
            <s:SolidColor id="bgFill" color="#000000"/>
        </s:fill>
    </s:Rect>
    
    <!--
        Note: setting the minimum size to 0 here so that changes to the host component's
        size will not be thwarted by this skin part's minimum size.   This is a compromise,
        more about it here: http://bugs.adobe.com/jira/browse/SDK-21143
    -->
    <!--- @copy spark.components.SkinnableContainer#contentGroup -->
    <s:Group id="contentGroup" left="0" right="0" top="0" bottom="0" minWidth="0" minHeight="0">
        <s:layout>
            <s:VerticalLayout/>
        </s:layout>
        
        <s:ComboBox id="paletteCmb" dataProvider="{this.hostComponent.appModel.colorPalettes}" selectedIndex="0"/>
        
        <!-- 
        The treemap itself.
        
        Currently the treemap can not use Flex 4 based fonts so fonts are set
        explicitly.
        -->
        <controls:TreeMapControl id="treemap"
                                 width="300"
                                 height="200" 
                                 transitionPeriod="1.2"
                                 styleFromDataRoot="true" 
                                 data="{this.hostComponent.appModel.treeData}"
                                 
                                 fontFamily="Arial"
                                 fontSize="16"
                                 labelEncodingField="name"
                                 labelColorStrategy="glow"
                                 truncateToFit="true"
                                 
                                 palette="{paletteCmb.selectedItem}"
                                 colorEncodingField="color"
                                 sizeEncodingField="size"                                 
                                 
                                 strokeColors="[0x000000, 0x000000, 0x000000, 0xcccccc]"
                                 strokeAlphas="[1,1,1,1]"
                                 strokeThicknesses="[0,3,1,0.25]"/>
        <s:Label text="{Strings.format('{0}', this.hostComponent.selectedData.SEX)}" color="0x666666"/>
        
    </s:Group>

</s:Skin>
