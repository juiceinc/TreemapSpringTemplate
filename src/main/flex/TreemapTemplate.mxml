<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
							 xmlns:s="library://ns.adobe.com/flex/spark" 
							 xmlns:mx="library://ns.adobe.com/flex/mx" 
							 minWidth="955" minHeight="600" 
                             backgroundColor="white" 
							 applicationComplete="onApplicationComplete(event)">

	<fx:Script>
		<![CDATA[
            import mx.controls.Button;
            import mx.events.FlexEvent;
            
            import org.juicekit.app.treemap.infrastructure.ApplicationPresenter;
            import org.juicekit.app.treemap.view.TreemapContainer;
            import org.springextensions.actionscript.context.support.FlexXMLApplicationContext;
            import org.springextensions.actionscript.context.support.MXMLApplicationContext;
            import org.springextensions.actionscript.ioc.factory.config.EventHandlerMetaDataPostProcessor;
            import org.springextensions.actionscript.stage.DefaultAutowiringStageProcessor;

			
			/**
			 * Force the compiler to include the code for classes created in the context.
			 */
			private var _compiledClasses:Array = [
                DefaultAutowiringStageProcessor, 
                EventHandlerMetaDataPostProcessor,
                // Add necessary presenters
				ApplicationPresenter
            ];
			
			/**
			 * Holds a reference to the application context.
			 */
			private var _appContext:MXMLApplicationContext;
			
			
			/**
			 * Instantiate the application context after the Flex framework is created.
			 * This approach helps limit the initial loading screen time.
			 */
			private function onApplicationComplete(event:FlexEvent):void {
				_appContext = new MXMLApplicationContext(TreemapApplicationContext);
                // listen for the object definitions loading to complete (loaded and parsed mxml object definitions)
				_appContext.addEventListener(Event.COMPLETE, onAppContextLoad);
				_appContext.load();
			}
			
            
			private function onAppContextLoad(event:Event):void {
				// Instantiate the visual root after the context is initialized.
                this.addElement(new TreemapContainer());                
			}
            
            [Bindable]
            public var tmc:TreemapContainer;

			
		]]>
	</fx:Script>

    <fx:Style source="org/juicekit/app/treemap/view/styles/treemapStyles.css"/>

</s:Application>
